# Cores no terminal 
Há várias formas de adicionar cores, como o módulo 'Colorize'.

* ANSI - escape sequence *

Começa com \.
\033[m ----> \033[style; text; backm
Exemplo: \033[0;33;44m
Todos os argumentos são opcionais, mas seguem esse padrão de ordem.

--------------------------------------------------------------------------------------------
    ESTILO				|	    CORES	    FUNDO(BACK)
0 = Sem estilo				|	 30 = Preto		40
1 = Negrito				|	 31 = Vermelho		41
4 = Sublinhado				|	 32 = Verde		42
7 = Negativo (inverter as posições)	|	 33 = Amarelo		43
					|	 34 = Azul Claro	44
					|	 35 = Magenda		45
					|	 36 = Ciano		46
					|	 37 = Cinza		47
----------------------------------------------------------------------------------------------
Podemos deixar alguns espaços em branco que ele considerará como padrão.
Para usar o padrão de fundo preto e letra cinza, basta deixar tudo em branco.

\033[7;30m
Levando em consideração que 30 é letra branca, o estilo 7 inverterá o fundo preto pra branco e a letra branca pra preto.

Para que a faixa de cor do fundo não vá até o final "infinitamente", basta adicionar \033[m ao final da string, assim ela ficará somente atrás do texto escrito.
Posso repetir várias vezes na mesma string.

*Eu posso colocar o código no .format(), basta usar as chaves.*

Dá pra indicar cores ANSI por strings através do dicionário.

cores = {"limpo": \033[m, "pretoebranco" : \033[7;30m}
.format(cores["pretoebranco"])